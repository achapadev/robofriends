{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","CardList","ReactDOM","render","document","getElementById"],"mappings":"kOA4BeA,EA1BF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCYGK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCSFC,G,KAfG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,EACVZ,KAAK,GACLE,GAAG,SCIIc,EAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCWEC,G,wDAnBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,yDAEFG,KAAKX,MAAMK,a,GAhBKQ,cCsDZC,E,kDAhDb,aAAe,IAAD,8BACZ,gBAkBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAhB1C,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IANH,E,qDAUd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAEtB,OAAQkC,S,oBAY7C,WACE,MAAgCb,KAAKJ,MAA7BjB,EAAR,EAAQA,OAAQ2B,EAAhB,EAAgBA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAACC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAEvD,OAAKtC,EAAOwC,OAIR,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAACgB,EAAD,CAAUzC,OAAQmC,WARnB,6C,GAhCKZ,aCAlBmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3421314e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Above we do this same component definition but with destructing instead of passing props itself\r\n\r\n// const Card = (props) => {\r\n//   return (\r\n//     <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n//       <img src={`https://robohash.org/${props.id}?200x200`} alt=\"robots\" />\r\n//       <div>\r\n//         <h2>{props.name}</h2>\r\n//         <p>{props.email}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default Card;\r\n","import React from \"react\"\r\nimport Card from \"./Card\"\r\n\r\nconst Cardlist = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cardlist\r\n","import React from \"react\"\r\nimport \"tachyons\"\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n        name=\"\"\r\n        id=\"\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from \"react\"\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"5px solid black\",\r\n        height: \"800px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from \"react\"\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, { Component } from \"react\"\r\nimport CardList from \"../components/CardList\"\r\n// import { robots } from \"./robots\"\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport Scroll from \"../components/Scroll\"\r\nimport \"./App.css\"\r\nimport ErrorBoundry from \"../components/ErrorBoundry\"\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    //     These are the things that can change and describes our app\r\n    //     usually live in the parent component as well\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }))\r\n  }\r\n\r\n  // Just a random function name we have made up, similar to DOM manipulation\r\n  // everytime input changes we get an event..\r\n  //   we can pass this function now on SearchBox component..has to be this. because it is an object\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  // since app owns state it is allowed to change it (robots)\r\n  // state variables being passed to CardList as prop\r\n  render() {\r\n    const { robots, searchfield } = this.state\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    if (!robots.length) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f2\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./containers/App\"\nimport \"tachyons\"\n// Have to destructure robots array from robots.js because it did just a normal export and not a default export of specific variable\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}